// Generated by Haxe 4.1.1
(function ($hx_exports, $global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var FocusManager = function() { };
FocusManager.__name__ = true;
FocusManager.get_focusedItem = function() {
	if(FocusManager.focusedItem != null && !FocusManager.isAlive(FocusManager.focusedItem.element.get(0))) {
		FocusManager.focusedItem = null;
	}
	return FocusManager.focusedItem;
};
FocusManager.isAlive = function(element) {
	if(element == null) {
		return false;
	}
	while(true) {
		element = element.parentNode;
		if(!(element != null)) {
			break;
		}
		if(element == window.document) {
			return true;
		}
	}
	return false;
};
FocusManager.focus = function(container) {
	FocusManager.focusedItem = container.parent;
};
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var currentWindow = electron_renderer_Remote.getCurrentWindow();
	currentWindow.setMenu(MenuBuilder.build());
	electron_renderer_IpcRenderer.on("init",Main.init);
};
Main.init = function(event,fileNames) {
	var vilog = require("./vilog.min.js");
	window.Vilog = vilog.Vilog;
	window.VilogElementLogger = vilog.VilogElementLogger;
	Vilog.changeKeyboardMode(1);
	window.$ = window.jQuery = require("jquery");
	window.GoldenLayout = require("golden-layout");
	var contents = storage_LayoutStorage.load(electron_renderer_Remote.getCurrentWindow(),fileNames,"main");
	var config = { settings : { showPopoutIcon : false, showMaximiseIcon : false}, content : [contents]};
	Main.goldenLayout = new GoldenLayout(config);
	Main.goldenLayout.registerComponent("file",Main.openFile);
	Main.goldenLayout.init();
	window.document.ondragover = window.document.ondrop = function(e) {
		e.preventDefault();
		return false;
	};
	window.document.body.addEventListener("drop",Main.onDrop);
};
Main.onDrop = function(e) {
	if(0 < e.dataTransfer.files.length) {
		e.preventDefault();
		operation_FileOperation.openFile(e.dataTransfer.files[0].path);
	}
};
Main.openFile = function(container,componentState) {
	var element = container.getElement().get(0);
	element.tabIndex = 0;
	var id = "player_" + container.parent.config.id;
	container.getElement().get(0).innerHTML = "\r\n<div id=\"" + id + "\" class=\"vilog-player\">\r\n<div class=\"vi-row vi-content\"><div class=\"vilog\"></div></div>\r\n</div>\r\n<code class=\"vilog-log\"></code>\r\n";
	var container1 = container;
	container.on("show",function() {
		Main.onOpen(container1);
	});
};
Main.onOpen = function(container) {
	container.off("show");
	var id = "player_" + container.parent.config.id;
	var playerElement = window.document.getElementById(id);
	var player = Vilog.getPlayer(playerElement);
	var image = Vilog.getImage(playerElement.getElementsByClassName("vilog").item(0));
	var path = container.parent.config.componentState.path;
	image.loadFile(path);
	var logElement = container.getElement().get(0).getElementsByClassName("vilog-log").item(0);
	image.addLogger(new VilogElementLogger(path,vilog_enums_VilogLogLevel.All,logElement));
	var container1 = container;
	container.on("show",function() {
		FocusManager.focus(container1);
	});
	var container2 = container;
	playerElement.addEventListener("focus",function() {
		FocusManager.focus(container2);
	});
	var container3 = container;
	container.on("show",function() {
		Main.onFocus(container3);
	});
	var container4 = container;
	playerElement.addEventListener("focus",function() {
		Main.onFocus(container4);
	});
	var split = require("./splitjs/split.min.js");
	split([playerElement,logElement],{ direction : "vertical", sizes : container.parent.config.componentState.sizes, gutterSize : 7});
	FocusManager.focus(container);
	Main.onFocus(container);
};
Main.onFocus = function(container) {
	var id = "player_" + container.parent.config.id;
	var element = window.document.getElementById(id);
	if(element != null && element != window.document.activeElement) {
		element.focus();
	}
	if(Main.goldenLayout.isInitialised) {
		console.log("src/renderer/Main.hx:125:",Main.goldenLayout.toConfig().content);
	}
};
Math.__name__ = true;
var MenuBuilder = function() { };
MenuBuilder.__name__ = true;
MenuBuilder.build = function() {
	var template = [{ label : "&File", id : "file", role : "fileMenu", submenu : [{ label : "&Open", accelerator : "CommandOrControl+O", click : operation_FileOperation.open},{ id : "recent", label : "&Recent Files", submenu : []},{ id : "export", label : "&Export", accelerator : "CommandOrControl+E", click : operation_FileOperation.export},{ type : "separator"},{ label : "&Restart", click : function(item,focusedWindow) {
		electron_renderer_Remote.app.relaunch({ });
		electron_renderer_Remote.app.exit();
	}}]},{ label : "&View", id : "file", role : "viewMenu", submenu : [{ label : "&Close Tab", accelerator : "CommandOrControl+W", click : operation_TabOperation.close},{ label : "Close &Other Tabs", accelerator : "CommandOrControl+Shift+W", click : operation_TabOperation.closeOthers},{ label : "Close &All Tabs", accelerator : "CommandOrControl+Alt+W", click : operation_TabOperation.closeAll},{ type : "separator"},{ label : "&Next Tab", accelerator : "CommandOrControl+Tab", click : operation_TabOperation.next},{ label : "&Previous Tab", accelerator : "CommandOrControl+Shift+Tab", click : operation_TabOperation.prev},{ type : "separator"},{ label : "&Reload Tab", accelerator : "F5", click : operation_TabOperation.reload},{ type : "separator"},{ label : "Open &Directory", accelerator : "Alt+Shift+R", click : function(item,focusedWindow) {
		var item = FocusManager.get_focusedItem();
		if(item != null && item.isComponent && item.config.componentState.path != null) {
			var template = electron_renderer_Remote.shell;
			var template1 = js_node_Path.dirname(item.config.componentState.path);
			template.openPath(template1);
		}
	}}]},{ label : "&Help", submenu : [{ label : "&Github Repogitory", click : function(item,focusedWindow) {
		electron_renderer_Remote.shell.openExternal("https://github.com/shohei909/visual_log_viewer");
	}},{ label : "&Online Documentation", click : function(item,focusedWindow) {
		electron_renderer_Remote.shell.openExternal("http://vilog.corge.net/");
	}},{ label : "&Version", click : function(item,focusedWindow) {
		var dialog = electron_renderer_Remote.dialog;
		var template = "Visual Log Viewer: " + electron_renderer_Remote.app.getVersion();
		dialog.showMessageBox({ title : "About Visual Log Viewer", message : template});
	}},{ type : "separator"},{ label : "&Open Storage Directory", click : function(item,focusedWindow) {
		var template = electron_renderer_Remote.shell;
		var template1 = electron_renderer_Remote.app.getPath("userData");
		template.openPath(template1);
	}},{ label : "Open &Installation Directory", click : function(item,focusedWindow) {
		var template = electron_renderer_Remote.shell;
		var template1 = js_node_Path.dirname(electron_renderer_Remote.app.getPath("module"));
		template.openPath(template1);
	}},{ type : "separator"},{ label : "&Toggle Developer Tools", accelerator : "F12", role : "toggleDevTools"}]}];
	var menu = electron_renderer_Remote.Menu.buildFromTemplate(template);
	MenuBuilder.recentMenu = menu.getMenuItemById("recent").submenu;
	MenuBuilder.exportMenu = menu.getMenuItemById("export");
	return menu;
};
var Std = function() { };
Std.__name__ = true;
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var electron_renderer_IpcRenderer = require("electron").ipcRenderer;
var electron_renderer_Remote = require("electron").remote;
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	unwrap: function() {
		return this.__nativeException;
	}
	,get_native: function() {
		return this.__nativeException;
	}
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	unwrap: function() {
		return this.value;
	}
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
var haxe_io_Output = function() { };
haxe_io_Output.__name__ = true;
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_jquery_JqEltsIterator = function(j) {
	this.i = 0;
	this.j = j;
};
js_jquery_JqEltsIterator.__name__ = true;
js_jquery_JqEltsIterator.prototype = {
	hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return $(this.j[this.i++]);
	}
};
var js_jquery_JqIterator = function(j) {
	this.i = 0;
	this.j = j;
};
js_jquery_JqIterator.__name__ = true;
js_jquery_JqIterator.prototype = {
	hasNext: function() {
		return this.i < this.j.length;
	}
	,next: function() {
		return this.j[this.i++];
	}
};
var js_node_Fs = require("fs");
var js_node_KeyValue = {};
js_node_KeyValue.get_key = function(this1) {
	return this1[0];
};
js_node_KeyValue.get_value = function(this1) {
	return this1[1];
};
var js_node_Path = require("path");
var js_node_buffer_Buffer = require("buffer").Buffer;
var js_node_stream_WritableNewOptionsAdapter = {};
js_node_stream_WritableNewOptionsAdapter.from = function(options) {
	if(!Object.prototype.hasOwnProperty.call(options,"final")) {
		Object.defineProperty(options,"final",{ get : function() {
			return options.final_;
		}});
	}
	return options;
};
var js_node_url_URLSearchParamsEntry = {};
js_node_url_URLSearchParamsEntry._new = function(name,value) {
	var this1 = [name,value];
	return this1;
};
js_node_url_URLSearchParamsEntry.get_name = function(this1) {
	return this1[0];
};
js_node_url_URLSearchParamsEntry.get_value = function(this1) {
	return this1[1];
};
var operation_FileOperation = function() { };
operation_FileOperation.__name__ = true;
operation_FileOperation.open = function() {
	var dialog = electron_renderer_Remote.dialog;
	var openDialog = electron_renderer_Remote.getCurrentWindow();
	var openDialog1 = dialog.showOpenDialog(openDialog,{ properties : ["openFile","multiSelections"], filters : [{ name : "Visual Log", extensions : ["vilog"]}]}).then(operation_FileOperation.openFiles);
};
operation_FileOperation.openFile = function(path) {
	var path1 = js_node_Path.resolve(path);
	var existing = Main.goldenLayout.root.getItemsByFilter(function(item) {
		var state = item.config.componentState;
		if(state == null) {
			return false;
		}
		return state.path == path1;
	});
	if(0 < existing.length) {
		var target = existing[0];
		if(target.parent != null && target.parent.isStack) {
			operation_FileOperation.reload(target);
			target.parent.setActiveContentItem(target);
		}
	} else {
		var stack = operation_FileOperation.findStackFromBottom(FocusManager.get_focusedItem());
		if(stack == null) {
			stack = operation_FileOperation.findStackFromTop(Main.goldenLayout.root);
		}
		stack.addChild(storage_LayoutStorage.createFileContent(path1));
	}
};
operation_FileOperation.reload = function(contentItem) {
	var id = "player_" + contentItem.config.id;
	var element = window.document.getElementById(id);
	var player = Vilog.getPlayer(element);
	var image = Vilog.getImage(element.getElementsByClassName("vilog").item(0));
	image.loadFile(contentItem.config.componentState.path);
};
operation_FileOperation.openFiles = function(event) {
	var filePaths = event.filePaths;
	var _g = 0;
	while(_g < filePaths.length) {
		var path = filePaths[_g];
		++_g;
		operation_FileOperation.openFile(path);
	}
};
operation_FileOperation.findStackFromBottom = function(item) {
	if(item == null) {
		return null;
	}
	if(item.isStack) {
		return item;
	}
	return operation_FileOperation.findStackFromBottom(item.parent);
};
operation_FileOperation.findStackFromTop = function(item) {
	if(item.isStack) {
		return item;
	}
	if(item.isComponent) {
		item.parent.addChild({ type : "stack", content : []});
		var stack = item.parent.contentItems[item.parent.contentItems.length - 1];
		item.parent.removeChild(item);
		stack.addChild(item);
		return stack;
	}
	if(item.contentItems.length == 0) {
		item.addChild({ type : "stack", content : []});
		return item.contentItems[item.contentItems.length - 1];
	}
	return operation_FileOperation.findStackFromTop(item.contentItems[0]);
};
operation_FileOperation.export = function() {
};
var operation_TabOperation = function() { };
operation_TabOperation.__name__ = true;
operation_TabOperation.close = function() {
	var item = FocusManager.get_focusedItem();
	if(item == null) {
		return;
	}
	if(item.isComponent) {
		item.remove();
	}
};
operation_TabOperation.closeOthers = function() {
	var item = FocusManager.get_focusedItem();
	if(item == null) {
		return;
	}
	if(item.parent == null || !item.parent.isStack) {
		return;
	}
	var _g = 0;
	var _g1 = item.parent.contentItems;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		if(i.isComponent && i != item) {
			i.remove();
		}
	}
};
operation_TabOperation.reload = function() {
	var item = FocusManager.get_focusedItem();
	if(item == null) {
		return;
	}
	if(item.isComponent) {
		operation_FileOperation.reload(item);
	}
};
operation_TabOperation.closeAll = function() {
	operation_TabOperation.closeOthers();
	operation_TabOperation.close();
};
operation_TabOperation.next = function() {
	var item = FocusManager.get_focusedItem();
	if(item == null) {
		return;
	}
	if(item.parent == null || !item.parent.isStack) {
		return;
	}
	var index = item.parent.contentItems.indexOf(item);
	var length = item.parent.contentItems.length;
	var targetItem = item.parent.contentItems[(index + 1) % length];
	item.parent.setActiveContentItem(targetItem);
	targetItem.element.focus();
};
operation_TabOperation.prev = function() {
	var item = FocusManager.get_focusedItem();
	if(item == null) {
		return;
	}
	if(item.parent == null || !item.parent.isStack) {
		return;
	}
	var index = item.parent.contentItems.indexOf(item);
	var length = item.parent.contentItems.length;
	var targetItem = item.parent.contentItems[(index + length - 1) % length];
	item.parent.setActiveContentItem(targetItem);
	targetItem.element.focus();
};
var storage_LayoutStorage = function() { };
storage_LayoutStorage.__name__ = true;
storage_LayoutStorage.save = function(key) {
	if(!sys_FileSystem.exists(storage_LayoutStorage.DIR)) {
		sys_FileSystem.createDirectory(storage_LayoutStorage.DIR);
	}
	var path = storage_LayoutStorage.DIR + "/" + key + ".json";
	if(Main.goldenLayout.isInitialised) {
		var content = Main.goldenLayout.toConfig().content;
		js_node_Fs.writeFileSync(path,JSON.stringify(content[0]));
	}
};
storage_LayoutStorage.load = function(browserWindow,fileNames,key) {
	browserWindow.on("close",function() {
		storage_LayoutStorage.save(key);
	});
	var path = storage_LayoutStorage.DIR + "/" + key + ".json";
	if(fileNames.length == 0) {
		if(sys_FileSystem.exists(path)) {
			return JSON.parse(js_node_Fs.readFileSync(path,{ encoding : "utf8"}));
		} else {
			return { type : "stack", content : []};
		}
	} else {
		var _g = [];
		var _g1 = 0;
		while(_g1 < fileNames.length) {
			var fileName = fileNames[_g1];
			++_g1;
			_g.push(storage_LayoutStorage.createFileContent(fileName));
		}
		return { type : "stack", content : _g};
	}
};
storage_LayoutStorage.createFileContent = function(path) {
	return { type : "component", componentName : "file", componentState : { path : js_node_Path.resolve(path), sizes : [80,20]}, id : "f" + Std.random(134217727), title : js_node_Path.basename(path)};
};
var sys_FileSystem = function() { };
sys_FileSystem.__name__ = true;
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _g ) {
		return false;
	}
};
sys_FileSystem.createDirectory = function(path) {
	try {
		js_node_Fs.mkdirSync(path);
	} catch( _g ) {
		var e = haxe_Exception.caught(_g).unwrap();
		if(e.code == "ENOENT") {
			sys_FileSystem.createDirectory(js_node_Path.dirname(path));
			js_node_Fs.mkdirSync(path);
		} else {
			var stat;
			try {
				stat = js_node_Fs.statSync(path);
			} catch( _g ) {
				throw e;
			}
			if(!stat.isDirectory()) {
				throw e;
			}
		}
	}
};
var sys_io_FileInput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
sys_io_FileInput.__name__ = true;
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = js_node_buffer_Buffer.alloc(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			if(e.code == "EOF") {
				throw haxe_Exception.thrown(new haxe_io_Eof());
			} else {
				throw haxe_Exception.thrown(haxe_io_Error.Custom(e));
			}
		}
		if(bytesRead == 0) {
			throw haxe_Exception.thrown(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.pos >= js_node_Fs.fstatSync(this.fd).size;
	}
});
var sys_io_FileOutput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
sys_io_FileOutput.__name__ = true;
sys_io_FileOutput.__super__ = haxe_io_Output;
sys_io_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(b) {
		var buf = js_node_buffer_Buffer.alloc(1);
		buf[0] = b;
		js_node_Fs.writeSync(this.fd,buf,0,1,this.pos);
		this.pos++;
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		var buf = js_node_buffer_Buffer.from(data.buffer,data.byteOffset,s.length);
		var wrote = js_node_Fs.writeSync(this.fd,buf,pos,len,this.pos);
		this.pos += wrote;
		return wrote;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
});
var sys_io_FileSeek = $hxEnums["sys.io.FileSeek"] = { __ename__ : true, __constructs__ : ["SeekBegin","SeekCur","SeekEnd"]
	,SeekBegin: {_hx_index:0,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekCur: {_hx_index:1,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekEnd: {_hx_index:2,__enum__:"sys.io.FileSeek",toString:$estr}
};
var vilog_enums_VilogLogLevel = $hx_exports["VilogLogLevel"] = {};
function $iterator(o) { if( o instanceof Array ) return function() { return new haxe_iterators_ArrayIterator(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
var typeofJQuery = typeof($);
if(typeofJQuery != "undefined" && $.fn != null) {
	$.fn.elements = function() {
		return new js_jquery_JqEltsIterator(this);
	};
}
var typeofJQuery = typeof($);
if(typeofJQuery != "undefined" && $.fn != null) {
	$.fn.iterator = function() {
		return new js_jquery_JqIterator(this);
	};
}
storage_LayoutStorage.DIR = electron_renderer_Remote.app.getPath("userData") + "/state/layout";
vilog_enums_VilogLogLevel.All = 0;
vilog_enums_VilogLogLevel.Off = 8;
vilog_enums_VilogLogLevel.Trace = 1;
vilog_enums_VilogLogLevel.Info = 3;
vilog_enums_VilogLogLevel.Warn = 5;
vilog_enums_VilogLogLevel.Error = 7;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
